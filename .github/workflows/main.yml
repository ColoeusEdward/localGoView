name: buildElecLocalView
on: push
jobs:
  build-elec:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node-version: [18.12.0]  # 把 node.js 版本記錄在這，之後可以重新取出作為 cache key
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        # cache: 'npm'
        # cache-dependency-path: nt-web/package-lock.json
    - name: Setup pnpm
    # You may pin to the exact commit or the version.
    # uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598
      uses: pnpm/action-setup@v2.4.0
      with:
        # Version of pnpm to install
        version: 8.6.10 # optional
        # Where to store pnpm files
        # dest: # optional, default is ~/setup-pnpm
        # # If specified, run `pnpm install`
        # run_install: # optional, default is null
        # # File path to the package.json to read "packageManager" configuration
        # package_json_file: # optional, default is package.json
        # # When set to true, @pnpm/exe, which is a Node.js bundled package, will be installed, enabling using pnpm without Node.js.
        # standalone: # optional, default is false
      
    - name: Cache Node Modules
      uses: actions/cache@v2
      with:
        path: node_modules
        # cache key 包含了所有我們希望固定的資訊：OS，node 版本，以及 package-lock.json 的檔案內容，使用 hashFiles 將檔案內容轉換成字串
        key: node-modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('pnpm-lock.yaml') }}

    - name: Install Packages
      shell: bash
      run: ( test -d node_modules && echo "node_modules exists" || pnpm i )
    - run: pnpm blbs
    # - run: cd output/app && rm -rf win-unpacked

    - name: Easy Zip Files
      # You may pin to the exact commit or the version.
      # uses: vimtor/action-zip@26a249fb00d43ca98dad77a4b3838025fc226aa1
      uses: vimtor/action-zip@v1.1
      with:
        # Files or directories to zip
        files: dist
        # Name of output zip file
        dest: dist.zip # optional, default is result.zip
        # Whether to add subdirectories to simply zip all files to the root
        # recursive: # optional, default is true
    # - run:  ( cd output/app && zip -r nsis.zip *  )

    # - name: Post file to server
    #   run: |
    #     FILE_PATH="output/app/nsis.zip"
    #     SERVER_URL="https://meamoe.one/koa/mv_upload/free/uploadElectron"
    #     curl -X POST -F "files=@$FILE_PATH" $SERVER_URL
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
          # Artifact name
          name: build-elec-go-view # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          # path: ${{ github.workspace }}/nt-web/dist
          path: |
            ${{ github.workspace }}/dist.zip
          # The desired behavior if no files are found using the provided path.


    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v3.1.2
    #   with:
    #       # Artifact name
    #       name: buildtest # optional, default is artifact
    #       # A file, directory or wildcard pattern that describes what to upload
    #       path: ${{ github.workspace }}/nt-web/disttest
            
          # The desired behavior if no files are found using the provided path.
